generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Assessment {
  idAssessment    Int      @id @default(autoincrement())
  idUser          Int
  tinggiBadan     Int      @db.SmallInt
  beratBadan      Int      @db.SmallInt
  aktivitasHarian String
  faktor          String
  karbohidrat     Int      @default(0) @db.SmallInt
  protein         Int      @default(0) @db.SmallInt
  lemak           Int      @default(0) @db.SmallInt
  created_at      DateTime @default(now()) @db.Timestamp(0)
  updated_at      DateTime @default(now()) @db.Timestamp(0)
  user            User     @relation(fields: [idUser], references: [idUser], onDelete: Cascade)

  @@index([idAssessment, idUser], map: "assessment_index")
  @@index([idUser], map: "Assessment_idUser_fkey")
}

model User {
  idUser           Int              @id @default(autoincrement())
  email            String           @unique
  password         String
  namaLengkap      String
  tanggalLahir     DateTime?        @db.Date
  tanggalKehamilan DateTime?        @db.Date
  createdAt        DateTime         @default(now()) @db.Timestamp(3)
  updatedAt        DateTime         @default(now()) @db.Timestamp(3)
  assessments      Assessment[]
  imageNutritions  ImageNutrition[]

  @@index([idUser], map: "users_index")
}

model FoodStorage {
  id          Int              @id @default(autoincrement())
  namaMakanan String           @db.Text
  karbohidrat Float            @default(0) @db.Float
  lemak       Float            @default(0) @db.Float
  protein     Float            @default(0) @db.Float
  vitamin     String?          @db.VarChar(255)
  createdAt   DateTime         @default(now()) @db.Timestamp(0)
  makanans    ImageNutrition[]

  @@index([id], map: "foodstorage_index")
}

model ImageNutrition {
  id            Int         @id @default(autoincrement())
  idUser        Int
  idMakanan     Int
  NamaAktivitas String      @db.Text
  gambar        String      
  waktuMakan    WaktuMakan
  porsi         Int         @default(1) @db.TinyInt
  updated_at    DateTime    @default(now()) @db.Timestamp(0)
  created_at    DateTime    @default(now()) @db.Timestamp(0)
  makanan       FoodStorage @relation(fields: [idMakanan], references: [id], onDelete: Cascade)
  user          User        @relation(fields: [idUser], references: [idUser], onDelete: Cascade)

  @@index([idMakanan], map: "ImageNutrition_idMakanan_fkey")
  @@index([idUser], map: "ImageNutrition_idUser_fkey")
}

model Article {
  idArticle Int      @id @default(autoincrement())
  judul     String
  deskripsi String
  gambar    String
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @db.Timestamp(0)

  @@index([idArticle], map: "article_index")
}

enum WaktuMakan {
  Pagi
  Siang
  Malam
}
